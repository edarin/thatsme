pop_density=N/A
)
library(tidyverse)
# prepare data
data <- readxl::read_excel('_posts/2021-07-31-unraveling-hierarchichal-data-structure-with-sunburst-charts/nga_demo_data.xls')
data <- data %>%
mutate(
id = as.character(1:nrow(data)),
pop_density=N/A
)
# plot population density per region
ggplot(data %>%
group_by(
region
) %>%
mutate(mean_popDens = mean(pop_density)) %>%
ungroup(), aes(fill=mean_popDens, x=pop_density, y=as.factor(region)))+
geom_boxplot()+
theme_minimal()+
scale_fill_stepsn( colours = brewer.pal(6, "YlOrRd"))+
labs(fill='Mean \npopulation \ndensity', x='Population density', y='Region')
library(RColorBrewer)
# plot population density per region
ggplot(data %>%
group_by(
region
) %>%
mutate(mean_popDens = mean(pop_density)) %>%
ungroup(), aes(fill=mean_popDens, x=pop_density, y=as.factor(region)))+
geom_boxplot()+
theme_minimal()+
scale_fill_stepsn( colours = brewer.pal(6, "YlOrRd"))+
labs(fill='Mean \npopulation \ndensity', x='Population density', y='Region')
head(data)
head(data)
data %>% head()
data %>% head() %>% View()
library(kableExtra)
data %>% head() %>% select(id, N, type, region, state, local ) %>% kbl() %>% kable_minimal()
# prepare data
data <- readxl::read_excel('_posts/2021-07-31-unraveling-hierarchichal-data-structure-with-sunburst-charts/nga_demo_data.xls')
data <- data %>%
mutate(
id = paste0('cluster',1:nrow(data))),
# prepare data
data <- readxl::read_excel('_posts/2021-07-31-unraveling-hierarchichal-data-structure-with-sunburst-charts/nga_demo_data.xls')
data <- data %>%
mutate(
id = paste0('cluster',1:nrow(data))),
library(tidyverse)
library(RColorBrewer)
library(kableExtra)
# prepare data
data <- readxl::read_excel('_posts/2021-07-31-unraveling-hierarchichal-data-structure-with-sunburst-charts/nga_demo_data.xls')
data <- data %>%
mutate(
id = paste0('cluster',1:nrow(data))),
data <- data %>%
mutate(
id = paste0('cluster',1:nrow(data))),
library(tidyverse)
library(RColorBrewer)
library(kableExtra)
# prepare data
data <- readxl::read_excel('_posts/2021-07-31-unraveling-hierarchichal-data-structure-with-sunburst-charts/nga_demo_data.xls')
data <- data %>%
mutate(
id = paste0('cluster',1:nrow(data))),
data <- data %>%
mutate(
id = paste0('cluster',1:nrow(data)),
pop_density=N/A
)
knitr::include_graphics("pic/sunburst.jpg")
getwd()
knitr::include_graphics("/pic/sunburst.jpg")
knitr::include_graphics("./pic/sunburst.jpg")
knitr::include_graphics("./pic/sunburst.ong")
knitr::include_graphics("./pic/sunburst.png")
knitr::include_graphics("../../pic/sunburst.png")
knitr::include_graphics("sunburst.png")
knitr::include_graphics("sunburst.png")
knitr::include_graphics("sunburst.png")
library(here)
knitr::include_graphics("_posts/2021-07-31-unraveling-hierarchichal-data-structure-with-sunburst-charts/sunburst.png")
layer1 <- data1 %>%
group_by(type) %>%
summarise(n=n()) %>%
mutate(
ids = paste0('settlement', type),
labels = paste0('settlement <br>', type),
parents = '') %>%
ungroup() %>%
select(ids,labels, parents,n)
# create unique id for the nested admin level
data <- data %>%
mutate(state= paste0(state,region),
local = paste0(state, local))
layer1 <- data %>%
group_by(type) %>%
summarise(n=n()) %>%
mutate(
ids = paste0('settlement', type),
labels = paste0('settlement <br>', type),
parents = '') %>%
ungroup() %>%
select(ids,labels, parents,n)
plot_ly(d1, ids = ~ids, labels = ~labels, parents = ~parents, type = 'sunburst',
hovertext=~hover, insidetextorientation='radial')
library(plotly)
layer1 <- data %>%
group_by(type) %>%
summarise(n=n()) %>%
mutate(
ids = paste0('settlement', type),
labels = paste0('settlement <br>', type),
parents = '') %>%
ungroup() %>%
select(ids,labels, parents,n)
plot_ly(d1, ids = ~ids, labels = ~labels, parents = ~parents, type = 'sunburst',
hovertext=~hover, insidetextorientation='radial')
plot_ly(layer1, ids = ~ids, labels = ~labels, parents = ~parents, type = 'sunburst',
hovertext=~hover, insidetextorientation='radial')
plot_ly(layer1, ids = ~ids, labels = ~labels, parents = ~parents, type = 'sunburst',  insidetextorientation='radial')
layer1 <- data %>%
group_by(type) %>%
summarise(n=n()) %>%
mutate(
ids = paste0('settlement', type),
labels = paste0('settlement <br>', type),
parents = '') %>%
ungroup() %>%
select(ids,labels, parents,n) %>%
mutate(
hover= paste(ids, '\n sample size', n)
)
plot_ly(layer1, ids = ~ids, labels = ~labels, parents = ~parents, type = 'sunburst', hovertext=~hover, insidetextorientation='radial')
layer1 <- data %>%
group_by(type) %>%
summarise(n=n()) %>%
mutate(
ids = paste0('settlement', type),
labels = paste0('settlement <br>', type),
parents = '') %>%
ungroup() %>%
select(ids,labels, parents,n) %>%
mutate(
hover= paste('\n sample size', n)
)
plot_ly(layer1, ids = ~ids, labels = ~labels, parents = ~parents, type = 'sunburst', hovertext=~hover, insidetextorientation='radial')
sunburst_data_2layers <- rbind(
# first layer
layer1,
# second layer
data1 %>%
group_by(type, region) %>%
summarise(n=n()) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region),
labels = paste0('region ', region),
parents = paste0('settlement', type))%>%
ungroup() %>%
select(ids,labels, parents,n)) %>%
mutate(
hover= paste(ids, '\n sample size', n)
)
sunburst_data_2layers <- rbind(
# first layer
layer1,
# second layer
data %>%
group_by(type, region) %>%
summarise(n=n()) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region),
labels = paste0('region ', region),
parents = paste0('settlement', type))%>%
ungroup() %>%
select(ids,labels, parents,n)) %>%
mutate(
hover= paste(ids, '\n sample size', n)
)
sunburst_data_2layers <- rbind(
# first layer
layer1,
# second layer
data %>%
group_by(type, region) %>%
summarise(n=n()) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region),
labels = paste0('region ', region),
parents = paste0('settlement', type))%>%
ungroup() %>%
select(ids,labels, parents,n)%>%
mutate(
hover= paste(ids, '\n sample size', n)
))
plot_ly(sunburst_data_2layers, ids = ~ids, labels = ~labels, parents = ~parents, type = 'sunburst',
hovertext=~hover, insidetextorientation='radial')
sunburst_data_2layers <- rbind(
# first layer
layer1,
# second layer
data %>%
group_by(type, region) %>%
summarise(n=n()) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region),
labels = paste0('region ', region),
parents = paste0('settlement', type))%>%
ungroup() %>%
select(ids,labels, parents,n)%>%
mutate(
hover= paste('\n sample size', n)
))
plot_ly(sunburst_data_2layers, ids = ~ids, labels = ~labels, parents = ~parents, type = 'sunburst',
hovertext=~hover, insidetextorientation='radial')
sunburst_data_2layers <- rbind(
# first layer
layer1,
# second layer
data %>%
group_by(type, region) %>%
summarise(n=n()) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region),
labels = paste0('region ', region),
parents = paste0('settlement', type))%>%
ungroup() %>%
select(ids,labels, parents,n)%>%
mutate(
hover= paste(ids, '\n sample size', n)
))
plot_ly(sunburst_data_2layers, ids = ~ids, labels = ~labels, parents = ~parents, type = 'sunburst',
hovertext=~hover, insidetextorientation='radial')
# create data for sunburst plot
sunburst_data_4layers <- rbind(
# first layer
layer1,
# second layer
data %>%
group_by(type, region) %>%
summarise(n=n()) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region),
labels = paste0('region ', region),
parents = paste0('settlement', type))%>%
ungroup() %>%
select(ids,labels, parents,n)%>%
mutate(
hover= paste(ids, '\n sample size', n)
)),
# create data for sunburst plot
sunburst_data_4layers <- rbind(
# first layer
layer1,
# second layer
data %>%
group_by(type, region) %>%
summarise(n=n()) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region),
labels = paste0('region ', region),
parents = paste0('settlement', type))%>%
ungroup() %>%
select(ids,labels, parents,n)%>%
mutate(
hover= paste(ids, '\n sample size', n)
),
# third layer
data %>%
group_by(type, region, state) %>%
summarise(n=n()) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region, '-', 'state', state, '-', 'region', region),
labels = paste0('state ', state),
parents = paste('settlement', type, '-', 'region', region))%>%
ungroup() %>%
select(ids,labels, parents,n)%>%
mutate(
hover= paste(ids, '\n sample size', n)
),
# fourth layer
data %>%
group_by(type, region, state, local) %>%
summarise(n=n()) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region, '-', 'state', state,  '-', local),
labels = paste0('local ', local),
parents = paste('settlement', type, '-', 'region', region, '-', 'state', state, '-', 'region', region))%>%
ungroup() %>%
select(ids,labels, parents,n) %>%
mutate(
hover= paste(ids, '\n sample size', n)
)
)
plot_ly(sunburst_data_4layers, ids = ~ids, labels = ~labels, parents = ~parents, type = 'sunburst',
hovertext=~hover, insidetextorientation='radial')
# create missing combinations
data_complete <- data %>%
complete(region, nesting(type))
# create missing combinations
data_complete <- data %>%
complete(region, nesting(type))
data_complete
View(data_complete)
data_complete %>% filter(is.na(local)) %>% kble() %>% kable_minimal()
data_complete %>% filter(is.na(local)) %>% kbl() %>% kable_minimal()
data <- data %>%
mutate(
id = paste0('cluster',1:nrow(data)),
pop_density=N/A
) %>%
rename(
population=N
) %>%
select(id, population, type, region, state, local )
# create missing combinations
data_complete <- data %>%
complete(region, nesting(type))
data_complete %>% filter(is.na(local)) %>% kbl() %>% kable_minimal()
makeSunburst2layer <- function(data){
layers <- rbind(
# first layer
data %>%
group_by(type) %>%
summarise(n=sum(!is.na(N))) %>%
mutate(
ids = paste0('settlement', type),
labels = paste0('settlement <br>', type),
parents = '') %>%
ungroup() %>%
select(ids,labels, parents,n),
# second layer
data %>%
group_by(type, region) %>%
summarise(n=sum(!is.na(N))) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region),
labels = paste0('region ', region),
parents = paste0('settlement', type))%>%
ungroup() %>%
select(ids,labels, parents,n)) %>%
mutate(
hover= paste(ids, '\n sample size', n),
color= ifelse(n==0, 'yellow','')
)
return(layers)
}
plot_ly() %>%
add_trace(data=makeSunburst2layer(data1),
ids = ~ids, labels = ~labels, parents = ~parents,
type = 'sunburst',
hovertext=~hover, marker= list(colors=~color),
insidetextorientation='radial',
domain = list(column = 0)) %>%
add_trace(data=makeSunburst2layer(data1_complete),
ids = ~ids, labels = ~labels, parents = ~parents,
type = 'sunburst',
hovertext=~hover, marker= list(colors=~color),
insidetextorientation='radial',
domain = list(column = 1))  %>%
layout(
grid = list(columns =2, rows = 1),
margin = list(l = 0, r = 0, b = 0, t = 0))
We can visualise it with a sunbarst chart by adding a color attribute:
makeSunburst2layer <- function(data){
layers <- rbind(
# first layer
data %>%
group_by(type) %>%
summarise(n=sum(!is.na(N))) %>%
mutate(
ids = paste0('settlement', type),
labels = paste0('settlement <br>', type),
parents = '') %>%
ungroup() %>%
select(ids,labels, parents,n),
# second layer
data %>%
group_by(type, region) %>%
summarise(n=sum(!is.na(N))) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region),
labels = paste0('region ', region),
parents = paste0('settlement', type))%>%
ungroup() %>%
select(ids,labels, parents,n)) %>%
mutate(
hover= paste(ids, '\n sample size', n),
color= ifelse(n==0, 'yellow','')
)
return(layers)
}
plot_ly() %>%
add_trace(data=makeSunburst2layer(data),
ids = ~ids, labels = ~labels, parents = ~parents,
type = 'sunburst',
hovertext=~hover, marker= list(colors=~color),
insidetextorientation='radial',
domain = list(column = 0)) %>%
add_trace(data=makeSunburst2layer(data_complete),
ids = ~ids, labels = ~labels, parents = ~parents,
type = 'sunburst',
hovertext=~hover, marker= list(colors=~color),
insidetextorientation='radial',
domain = list(column = 1))  %>%
layout(
grid = list(columns =2, rows = 1),
margin = list(l = 0, r = 0, b = 0, t = 0))
makeSunburst2layer <- function(data){
layers <- rbind(
# first layer
data %>%
group_by(type) %>%
summarise(n=sum(!is.na(population))) %>%
mutate(
ids = paste0('settlement', type),
labels = paste0('settlement <br>', type),
parents = '') %>%
ungroup() %>%
select(ids,labels, parents,n),
# second layer
data %>%
group_by(type, region) %>%
summarise(n=sum(!is.na(population))) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region),
labels = paste0('region ', region),
parents = paste0('settlement', type))%>%
ungroup() %>%
select(ids,labels, parents,n)) %>%
mutate(
hover= paste(ids, '\n sample size', n),
color= ifelse(n==0, 'yellow','')
)
return(layers)
}
plot_ly() %>%
add_trace(data=makeSunburst2layer(data),
ids = ~ids, labels = ~labels, parents = ~parents,
type = 'sunburst',
hovertext=~hover, marker= list(colors=~color),
insidetextorientation='radial',
domain = list(column = 0)) %>%
add_trace(data=makeSunburst2layer(data_complete),
ids = ~ids, labels = ~labels, parents = ~parents,
type = 'sunburst',
hovertext=~hover, marker= list(colors=~color),
insidetextorientation='radial',
domain = list(column = 1))  %>%
layout(
grid = list(columns =2, rows = 1),
margin = list(l = 0, r = 0, b = 0, t = 0))
sunburst_data_2layers <- rbind(
# first layer
layer1,
# second layer
data %>%
group_by(type, region) %>%
summarise(n=n()) %>%
mutate(
ids = paste('settlement', type, '-', 'region', region),
labels = paste0('region ', region),
parents = paste0('settlement', type))%>%
ungroup() %>%
select(ids,labels, parents,n)%>%
mutate(
hover= paste(ids, '\n sample size', n)
))
plot_ly(sunburst_data_2layers,
ids = ~ids,
labels = ~labels,
parents = ~parents,
type = 'sunburst',
hovertext=~hover, insidetextorientation='radial')
tinytex::tlmgr_update()
distill:create.post('woprVision')
distill::create.post('woprVision')
distill::create_post('woprVision')
knitr::include_app("https://apps.worldpop.org/woprVision/")
?knitr::include_app
knitr::include_url("https://apps.worldpop.org/woprVision/")
knitr::include_url("https://apps.worldpop.org/woprVision/")
knitr::include_url("https://apps.worldpop.org/woprVision/")
knitr::include_url("https://apps.worldpop.org/woprVision/")
knitr::include_url("https://apps.worldpop.org/woprVision/")
knitr::include_url("https://apps.worldpop.org/woprVision/")
knitr::include_url("https://apps.worldpop.org/woprVision/")
install.packages('knitr')
install.packages("knitr")
install.packages("knitr")
knitr::include_graphics('woprvision.png')
getwd()
knitr::include_graphics('_posts/2021-08-01-woprvision/woprvision.png')
getwd()
?distill::create_post
distill::create_post('CoopCycle', date='2020-09-01')
knitr::include_graphics('./dat/schema1_ENG.jpg')
knitr::include_graphics('posts/2021-07-09-modelling-burkina-faso-population/dat/schema1_ENG.jpg')
getwd()
file.create(".nojekyll")
models <- read.csv(here::here("./_posts/2021-07-09-modelling-burkina-faso-population/dat/models.csv"),  stringsAsFactors = F, header=F)
colnames(models) <- c("Delineation", "Density Threshold", "% addditional data discarded", "RMSE")
kable(models, col.names=c("Delineation", "Density threshold", " ", " "), align ="l",escape=F, booktabs=T, caption='Sensitivity analysis results on predicted totals') %>%
add_header_above(c("Selection procedures"=2,
"EA (%)[note]"=1,
"RMSE[note]"=1)) %>%
add_footnote(c("Additional EAs discarded because of selection procedures (in percentage)", "RMSE was compiled over the complete communes from incomplete regions"), notation = "symbol") %>%
row_spec(4, bold=T) %>%
row_spec(0, italic = T)
